name: Test, Build and Release ipa
on:
  pull_request:
    branches:
      - main
      - master
  push:
    branches:
      - main
      - master
  workflow_dispatch:    
jobs:
  build:
    name: Build ipa
    runs-on: macos-latest
    steps:
    - uses: ruby/setup-ruby@v1
      with:
         ruby-version: '3.3'
         bundler-cache: true  
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0 
        
    # - name: Set Timezone
    #   uses: szenius/set-timezone@v2.0
    #   with:
    #     timezoneLinux: "Asia/Kolkata"
    #     timezoneMacos: "Asia/Kolkata"  
        
    - name: Install Bundler
      run: gem install bundler     
      
    - name: Install gems
      run: bundle install
      
    - name: Set up Firebase CLI
      run: |
        curl -sL https://firebase.tools | bash  
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
        
    - name: Clone Flutter repository with master channel
      uses: subosito/flutter-action@2783a3f08e1baf891508463f8c6653c258246225
      with:
        channel: master
    # - run: flutter doctor -v
    # - run: flutter pub get
    # - run: flutter test
    - run: |

        flutter build ios --debug --no-codesign

## output path is build/ios/iphoneos/Runner.app
    - name: pwd and ls
      run: |
        pwd
        ls -ltrh
        ls -ltrh build/ios/iphoneos
    - name: create Payload  
      run: mkdir Payload
      working-directory: build/ios/iphoneos
    - name: pwd and ls
      run: |
        pwd
        ls -ltrh build/ios/iphoneos/Payload
    - name: moving to payload
      run: mv Runner.app/ Payload
      working-directory: build/ios/iphoneos
    - name: pwd and ls
      run: |
        pwd
        ls -ltrh build/ios/iphoneos/Payload
    - name: Zip output
      run: zip -qq -r -9 FlutterIpaExport.ipa Payload
      working-directory: build/ios/iphoneos/  
    - name: pwd and ls
      run: |
        pwd
        ls -ltrh 
        ls -ltrh build/ios/iphoneos
        ls -ltrh build/ios/iphoneos/Payload
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ios-app
        path: build/ios/iphoneos/Payload     
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
       repo_token: ${{ secrets.GITHUB_TOKEN }}
       file: build/ios/iphoneos/FlutterIpaExport.ipa
       tag: v2.0
       overwrite: true
       body: "This is first release"        
    - name: Run Fastlane ios
      working-directory: ./ios
      run: |
        bundle exec fastlane ios distribute_ios --verbose 
      env:
        APP_ID: ${{ secrets.APP_ID_IOS }}
        FIREBASE_CLI_TOKEN: ${{ secrets.FIREBASE_CLI_TOKEN }}        
